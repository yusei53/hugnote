name: Database Migration

on:
  push:
    branches:
      - main

jobs:
  migrate:
    name: Run Database Migration
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.13.1

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build backend
        run: pnpm --filter backend build

      - name: Check DATABASE_URL secret
        run: |
          if [ -z "$DATABASE_URL" ]; then
            echo "‚ùå DATABASE_URL secret is not set"
            exit 1
          else
            echo "‚úÖ DATABASE_URL secret is configured"
          fi
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Pre-migration validation
        run: |
          cd packages/backend
          echo "üîç Checking current migration status..."
          DATABASE_URL="${DATABASE_URL}" pnpm db:check-migration || {
            echo "‚ö†Ô∏è  Pending migrations detected - proceeding with migration"
          }
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Run database migration
        run: |
          cd packages/backend
          DATABASE_URL="${DATABASE_URL}" pnpm db:migrate:safe
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Post-migration validation
        run: |
          cd packages/backend
          echo "üîç Verifying migration completion..."
          DATABASE_URL="${DATABASE_URL}" pnpm db:check-migration
          DATABASE_URL="${DATABASE_URL}" pnpm db:check-schema
          echo "‚úÖ Migration completed and verified successfully"
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
