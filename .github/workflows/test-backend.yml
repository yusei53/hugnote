name: Backend Tests

on: 
  push:
    branches: [ main ]
    paths:
      - 'packages/backend/**'
  pull_request:
    paths:
      - 'packages/backend/**'

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.12.0
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.13.1
      
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
      
      - name: Verify migration files consistency
        run: |
          # スキーマに基づいてマイグレーションを生成し、差分をチェック
          pnpm db:generate
          
          # 生成されたファイルがコミット済みファイルと一致するかチェック
          if [ -n "$(git status --porcelain drizzle/)" ]; then
            echo "❌ Migration files are not up to date with schema changes"
            echo "Generated files differ from committed files:"
            git status --porcelain drizzle/
            echo ""
            echo "Please run 'pnpm db:generate' and commit the generated files"
            exit 1
          fi
          
          echo "✅ Migration files are consistent with schema"
        working-directory: packages/backend

      - name: Setup test database
        run: |
          pnpm db:migrate
        working-directory: packages/backend
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
      
      - name: Run backend tests
        run: pnpm run test
        working-directory: packages/backend
        env:
          TEST_DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
      
      - name: Run backend lint
        run: pnpm run lint
        working-directory: packages/backend 
