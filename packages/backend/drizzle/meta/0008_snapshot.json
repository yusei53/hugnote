{
  "id": "eb2b1c34-6a69-40aa-90b5-6b60954dfe30",
  "prevId": "b46ac400-6e34-40e7-a871-eb3025a61333",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.appreciation_receivers": {
      "name": "appreciation_receivers",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "appreciation_id": {
          "name": "appreciation_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "receiver_id": {
          "name": "receiver_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "appreciation_receivers_appreciation_id_appreciations_id_fk": {
          "name": "appreciation_receivers_appreciation_id_appreciations_id_fk",
          "tableFrom": "appreciation_receivers",
          "tableTo": "appreciations",
          "columnsFrom": [
            "appreciation_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "appreciation_receivers_receiver_id_user_id_fk": {
          "name": "appreciation_receivers_receiver_id_user_id_fk",
          "tableFrom": "appreciation_receivers",
          "tableTo": "user",
          "columnsFrom": [
            "receiver_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "uk_appreciation_receiver": {
          "name": "uk_appreciation_receiver",
          "nullsNotDistinct": false,
          "columns": [
            "appreciation_id",
            "receiver_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.appreciations": {
      "name": "appreciations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "sender_id": {
          "name": "sender_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "message": {
          "name": "message",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "point_per_receiver": {
          "name": "point_per_receiver",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "appreciations_sender_id_user_id_fk": {
          "name": "appreciations_sender_id_user_id_fk",
          "tableFrom": "appreciations",
          "tableTo": "user",
          "columnsFrom": [
            "sender_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "chk_point_per_receiver_range": {
          "name": "chk_point_per_receiver_range",
          "value": "\"appreciations\".\"point_per_receiver\" >= 1 AND \"appreciations\".\"point_per_receiver\" <= 120"
        },
        "chk_message_length": {
          "name": "chk_message_length",
          "value": "char_length(\"appreciations\".\"message\") >= 1 AND char_length(\"appreciations\".\"message\") <= 200"
        }
      },
      "isRLSEnabled": false
    },
    "public.consumed_point_log": {
      "name": "consumed_point_log",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "appreciation_id": {
          "name": "appreciation_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "week_start_date": {
          "name": "week_start_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "consumed_points": {
          "name": "consumed_points",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "consumed_point_log_user_id_user_id_fk": {
          "name": "consumed_point_log_user_id_user_id_fk",
          "tableFrom": "consumed_point_log",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "consumed_point_log_appreciation_id_appreciations_id_fk": {
          "name": "consumed_point_log_appreciation_id_appreciations_id_fk",
          "tableFrom": "consumed_point_log",
          "tableTo": "appreciations",
          "columnsFrom": [
            "appreciation_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "chk_consumed_points_range": {
          "name": "chk_consumed_points_range",
          "value": "\"consumed_point_log\".\"consumed_points\" >= 1 AND \"consumed_point_log\".\"consumed_points\" <= 120"
        }
      },
      "isRLSEnabled": false
    },
    "public.discord_tokens": {
      "name": "discord_tokens",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "token_type": {
          "name": "token_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "discord_tokens_user_id_user_id_fk": {
          "name": "discord_tokens_user_id_user_id_fk",
          "tableFrom": "discord_tokens",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.oauth_state": {
      "name": "oauth_state",
      "schema": "",
      "columns": {
        "session_id": {
          "name": "session_id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "state": {
          "name": "state",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "nonce": {
          "name": "nonce",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "code_verifier": {
          "name": "code_verifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "oauth_state_state_unique": {
          "name": "oauth_state_state_unique",
          "nullsNotDistinct": false,
          "columns": [
            "state"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user": {
      "name": "user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "discord_id": {
          "name": "discord_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "discord_user_name": {
          "name": "discord_user_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "discord_avatar": {
          "name": "discord_avatar",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "user_discord_id_unique": {
          "name": "user_discord_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "discord_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}